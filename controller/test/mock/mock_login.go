// Code generated by MockGen. DO NOT EDIT.
// Source: ./service/auth/login_check.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockLoginChecker is a mock of LoginChecker interface
type MockLoginChecker struct {
	ctrl     *gomock.Controller
	recorder *MockLoginCheckerMockRecorder
}

// MockLoginCheckerMockRecorder is the mock recorder for MockLoginChecker
type MockLoginCheckerMockRecorder struct {
	mock *MockLoginChecker
}

// NewMockLoginChecker creates a new mock instance
func NewMockLoginChecker(ctrl *gomock.Controller) *MockLoginChecker {
	mock := &MockLoginChecker{ctrl: ctrl}
	mock.recorder = &MockLoginCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockLoginChecker) EXPECT() *MockLoginCheckerMockRecorder {
	return m.recorder
}

// Login mocks base method
func (m *MockLoginChecker) Login(userName, pwd string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Login", userName, pwd)
	ret0, _ := ret[0].(error)
	return ret0
}

// Login indicates an expected call of Login
func (mr *MockLoginCheckerMockRecorder) Login(userName, pwd interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Login", reflect.TypeOf((*MockLoginChecker)(nil).Login), userName, pwd)
}
