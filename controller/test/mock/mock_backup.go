// Code generated by MockGen. DO NOT EDIT.
// Source: ./service/task/backup_test.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	task "github.com/ibanyu/owl/service/task"
	reflect "reflect"
)

// MockBackupDao is a mock of BackupDao interface
type MockBackupDao struct {
	ctrl     *gomock.Controller
	recorder *MockBackupDaoMockRecorder
}

// MockBackupDaoMockRecorder is the mock recorder for MockBackupDao
type MockBackupDaoMockRecorder struct {
	mock *MockBackupDao
}

// NewMockBackupDao creates a new mock instance
func NewMockBackupDao(ctrl *gomock.Controller) *MockBackupDao {
	mock := &MockBackupDao{ctrl: ctrl}
	mock.recorder = &MockBackupDaoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockBackupDao) EXPECT() *MockBackupDaoMockRecorder {
	return m.recorder
}

// AddBackup mocks base method
func (m *MockBackupDao) AddBackup(backup *task.DbInjectionBackup) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddBackup", backup)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddBackup indicates an expected call of AddBackup
func (mr *MockBackupDaoMockRecorder) AddBackup(backup interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddBackup", reflect.TypeOf((*MockBackupDao)(nil).AddBackup), backup)
}

// UpdateBackup mocks base method
func (m *MockBackupDao) UpdateBackup(backup *task.DbInjectionBackup) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateBackup", backup)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateBackup indicates an expected call of UpdateBackup
func (mr *MockBackupDaoMockRecorder) UpdateBackup(backup interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateBackup", reflect.TypeOf((*MockBackupDao)(nil).UpdateBackup), backup)
}

// GetBackupInfoById mocks base method
func (m *MockBackupDao) GetBackupInfoById(id int64) (*task.DbInjectionBackup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBackupInfoById", id)
	ret0, _ := ret[0].(*task.DbInjectionBackup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBackupInfoById indicates an expected call of GetBackupInfoById
func (mr *MockBackupDaoMockRecorder) GetBackupInfoById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBackupInfoById", reflect.TypeOf((*MockBackupDao)(nil).GetBackupInfoById), id)
}
